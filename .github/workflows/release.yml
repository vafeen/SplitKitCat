name: Create Release

on:
  push:
    branches:
      - release
      - 20-deploying-versions
  workflow_dispatch:

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.generate_tag.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags

      - name: Generate Release Tag
        id: generate_tag
        run: |
          # Get year-month and day components
          YY_MM=$(TZ=Europe/Moscow date +'%y.%m')
          DD=$(TZ=Europe/Moscow date +'%d' | sed 's/^0*//') # Remove leading zero for shell arithmetic

          # Define the build number range for today. E.g., for day 26, it's 2600-2699.
          BUILD_START=$((DD * 100))
          BUILD_END=$((BUILD_START + 99))

          # Find the latest build number used today by filtering tags of the format YY.MM.BUILD
          # and checking if BUILD is within today's range.
          LATEST_BUILD_TODAY=$(git tag -l "${YY_MM}.*" | \
            awk -F. -v start="$BUILD_START" -v end="$BUILD_END" \
            'NF==3 && $3 ~ /^[0-9]+$/ && $3 >= start && $3 <= end {print $3}' | \
            sort -n | tail -n 1)

          # If no build exists for today, start with BUILD_START. Otherwise, increment the latest.
          if [ -z "$LATEST_BUILD_TODAY" ]; then
            NEW_BUILD_NUMBER=$BUILD_START
          else
            NEW_BUILD_NUMBER=$((LATEST_BUILD_TODAY + 1))
          fi

          # Construct the final release tag
          RELEASE_TAG="${YY_MM}.${NEW_BUILD_NUMBER}"
          
          echo "Generated tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

  build-linux:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Deb
        run: ./gradlew :composeApp:packageDeb -PversionName="${{ needs.prepare-release.outputs.release_tag }}"

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: composeApp/build/compose/binaries/main/deb/*.deb

  build-windows:
    needs: prepare-release
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Build Msi
        run: ./gradlew.bat :composeApp:packageMsi -PversionName="${{ needs.prepare-release.outputs.release_tag }}"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: composeApp/build/compose/binaries/main/msi/*.msi

  release:
    needs: [ prepare-release, build-linux, build-windows ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Git Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ needs.prepare-release.outputs.release_tag }}
          message: "Release ${{ needs.prepare-release.outputs.release_tag }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare-release.outputs.release_tag }}
          name: ${{ needs.prepare-release.outputs.release_tag }}
          body: ""
          files: |
            artifacts/linux-artifacts/*.deb
            artifacts/windows-artifacts/*.msi

name: Create Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Verify CHANGE.md exists
        run: |
          if [ ! -f "CHANGE.md" ]; then
            echo "❌ CHANGE.md is required for release"
            exit 1
          fi
          echo "✅ CHANGE.md found"

      - name: Generate Release Tag
        id: generate_tag
        run: |
          # Получаем текущую дату
          TODAY=$(TZ=Europe/Moscow date +'%Y.%m.%d')
          echo "Base tag: $TODAY"
          
          # Получаем все существующие теги из текущего репозитория
          git fetch --tags
          git tag -l > local_tags.txt
          
          # Считаем количество релизов для этой даты
          EXISTING_TAGS=$(grep -c "^$TODAY" local_tags.txt || true)
          echo "Existing tags for today: $EXISTING_TAGS"
          
          # Считаем общее количество релизов (только с паттерном даты)
          TOTAL_RELEASES=$(grep -c -E '^[0-9]{4}\.[0-9]{2}\.[0-9]{2}' local_tags.txt || true)
          echo "Total releases: $TOTAL_RELEASES"
          
          if [ $EXISTING_TAGS -eq 0 ]; then
            RELEASE_TAG="$TODAY"
          else
            RELEASE_TAG="${TODAY}-patch${EXISTING_TAGS}"
          fi
          
          echo "Generated tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "VERSION_CODE=$((TOTAL_RELEASES + 1))" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: 'jdk'
          cache: 'gradle'

      - name: Build APK with Version
        run: |
          ./gradlew assembleRelease \
            -PversionName=${{ steps.generate_tag.outputs.RELEASE_TAG }} \
            -PversionCode=${{ steps.generate_tag.outputs.VERSION_CODE }} \
            -x lintVitalAnalyzeRelease

      - name: Set up Keystore
        run: |
          sudo apt update -y || true
          sudo apt install -y --no-install-recommends coreutils
          mkdir -p $RUNNER_TEMP/keystores
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > $RUNNER_TEMP/keystores/keystore.jks

      - name: Sign APK
        run: |
          ANDROID_SDK_PATH=$ANDROID_HOME/build-tools/35.0.0/apksigner
          $ANDROID_SDK_PATH sign \
            --ks $RUNNER_TEMP/keystores/keystore.jks \
            --ks-key-alias ${{ secrets.KEY_ALIAS }} \
            --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
            --key-pass pass:${{ secrets.KEY_PASSWORD }} \
            --out app-release.apk \
            app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Generate Changelog
        run: |
          cat CHANGE.md > CHANGE.txt

      - name: Create Tag
        uses: rickstaa/action-create-tag@v1.7.2
        with:
          tag: ${{ steps.generate_tag.outputs.RELEASE_TAG }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app-release.apk
          body_path: CHANGE.txt
          tag_name: ${{ steps.generate_tag.outputs.RELEASE_TAG }}
          name: ${{ steps.generate_tag.outputs.RELEASE_TAG }}
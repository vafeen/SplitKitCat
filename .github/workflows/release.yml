name: Create Release

on:
  push:
    branches:
      - release
      - 11-deploying
  workflow_dispatch:

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.generate_tag.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags

      - name: Generate Release Tag
        id: generate_tag
        run: |
          # Generate base tag in YY.MM.DD format from a specific timezone
          TODAY=$(TZ=Europe/Moscow date +'%y.%m.%d')
          echo "Base tag: $TODAY"
          
          # Count existing tags for today to create a patch version if needed
          EXISTING_TAGS=$(git tag -l "${TODAY}*" | wc -l)
          echo "Found $EXISTING_TAGS tags for today."
          
          if [ $EXISTING_TAGS -eq 0 ]; then
            RELEASE_TAG="$TODAY"
          else
            RELEASE_TAG="${TODAY}-patch${EXISTING_TAGS}"
          fi
          
          echo "Generated tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

  build-linux:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Build Deb
        run: bash ./gradlew :composeApp:packageDeb -PversionName=${{ needs.prepare-release.outputs.release_tag }}

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: composeApp/build/compose/binaries/main/deb/*.deb

  build-windows:
    needs: prepare-release
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Build Msi
        run: ./gradlew.bat :composeApp:packageMsi -PversionName=${{ needs.prepare-release.outputs.release_tag }}

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: composeApp/build/compose/binaries/main/msi/*.msi

  release:
    needs: [ build-linux, build-windows ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Git Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ needs.prepare-release.outputs.release_tag }}
          message: "Release ${{ needs.prepare-release.outputs.release_tag }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare-release.outputs.release_tag }}
          name: ${{ needs.prepare-release.outputs.release_tag }}
          body: ""
          files: |
            artifacts/linux-artifacts/*.deb
            artifacts/windows-artifacts/*.msi
